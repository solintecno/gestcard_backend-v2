# Required GitHub Secrets:
# - HOST: Server host for deployment
# - USERNAME: SSH username for deployment
# - PORT: SSH port for deployment  
# - KEY: SSH private key for deployment
# - GITHUB_TOKEN: GitHub token (automatically provided)
#
# Database and JWT values are hardcoded in the deployment script:
# - DATABASE_HOST: localhost
# - DATABASE_PORT: 5432
# - DATABASE_USERNAME: postgres
# - DATABASE_PASSWORD: postgres
# - DATABASE_NAME: gestcard_db
# - JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
# - JWT_EXPIRES_IN: 7d

name: deployments-dev
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/back-gestcad
  VERSION: ${{ github.ref_name }}
  PORT: 3001

jobs:
  create-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}


      - name: Build Docker image
        run: |
          docker build . --tag $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:$VERSION
          docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

  deploy:
    name: deployment
    runs-on: ubuntu-latest
    needs: create-docker-image
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo "Logging in to GitHub Container Registry..."
            echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u "${{ github.repository_owner }}" --password-stdin
            
            # Detener el contenedor existente
            echo "Stopping the existing container..."
            docker rm -f backen_gestcad_dev > /dev/null 2>&1
            
            # Ejecutar el nuevo contenedor
            echo "Running the new container..."
            docker run -d --name backen_gestcad_dev --restart=always \
              -p 3001:3001 \
              --network gestcad_dev \
              -e DATABASE_HOST=localhost \
              -e DATABASE_PORT=5432 \
              -e DATABASE_USERNAME=postgres \
              -e DATABASE_PASSWORD=postgres \
              -e DATABASE_NAME=gestcard_db \
              -e JWT_SECRET=your-super-secret-jwt-key-change-this-in-production \
              -e JWT_EXPIRES_IN=7d \
              -e PORT=3001 \
              -e NODE_ENV=development \
              ghcr.io/${{ github.repository_owner }}/back-gestcad:${{ github.ref_name }}